Sys.which("python")
d
reticulate::use_condaenv("miniconda3",required = T)
Sys.which("python")
reticulate::use_condaenv("anaconda3",required = T)
Sys.which("python")
reticulate::use_condaenv("anaconda3",required = T)
Sys.which("python")
setwd("~/Desktop/experiment_result/alg_comp/exdata")
source('~/Desktop/experiment_result/alg_comp/exdata/postprocess_bbob.R')
30*160/4
source('~/Desktop/experiment_result/alg_comp/exdata/postprocess_bbob.R')
for(funIndex in 10){
plot(nEval,method_milestone[[1]][[funIndex]],type="l",lty=2,xlab = "nEval",ylab="f(x)",ylim=c(0,max(method_milestone[[1]][[funIndex]]/10)))
lines(nEval,method_milestone[[2]][[funIndex]],col='red',lty=2)
lines(nEval,method_milestone[[3]][[funIndex]],col='blue',lty=2)
legend("topright",lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
title(paste("convergence fun",funIndex))
}
for(funIndex in 10){
plot(nEval,method_milestone[[1]][[funIndex]],type="l",lty=2,xlab = "nEval",ylab="f(x)",ylim=c(0,max(method_milestone[[1]][[funIndex]]/10)))
lines(nEval,method_milestone[[2]][[funIndex]],col='red',lty=2)
lines(nEval,method_milestone[[3]][[funIndex]],col='blue',lty=2)
legend("topright",lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
title(paste("convergence fun",funIndex))
}
source('~/Desktop/experiment_result/alg_comp/exdata/postprocess_bbob.R')
source('~/Desktop/experiment_result/alg_comp/exdata/postprocess_bbob.R')
for(funIndex in 10){
plot(nEval,log(method_milestone[[1]][[funIndex]],10),type="l",lty=2,xlab = "nEval",ylab="f(x)",ylim=c(0,max(log(method_milestone[[1]][[funIndex]],10))))
lines(nEval,log(method_milestone[[2]][[funIndex]],10),col='red',lty=2)
lines(nEval,log(method_milestone[[3]][[funIndex]],10),col='blue',lty=2)
legend("topright",lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
title(paste("convergence fun",funIndex))
}
for(funIndex in 1:24){
plot(nEval,log(method_milestone[[1]][[funIndex]],10),type="l",lty=2,xlab = "nEval",ylab="f(x)",ylim=c(0,max(log(method_milestone[[1]][[funIndex]],10))))
lines(nEval,log(method_milestone[[2]][[funIndex]],10),col='red',lty=2)
lines(nEval,log(method_milestone[[3]][[funIndex]],10),col='blue',lty=2)
legend("topright",lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
title(paste("convergence fun",funIndex))
}
for(funIndex in 1:24){
plot(nEval,log(method_milestone[[1]][[funIndex]],10),type="l",lty=2,xlab = "nEval",ylab="f(x)",ylim=c(0,max(log(method_milestone[[1]][[funIndex]],10))))
lines(nEval,log(method_milestone[[2]][[funIndex]],10),col='red',lty=2)
lines(nEval,log(method_milestone[[3]][[funIndex]],10),col='blue',lty=2)
legend("topright",lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
title(paste("convergence fun",funIndex))
}
for(funIndex in 1:24){
plot(nEval,log(method_milestone[[1]][[funIndex]],10),type="l",lty=2,xlab = "nEval",ylab="f(x)",ylim=c(1,max(log(method_milestone[[1]][[funIndex]],10))))
lines(nEval,log(method_milestone[[2]][[funIndex]],10),col='red',lty=2)
lines(nEval,log(method_milestone[[3]][[funIndex]],10),col='blue',lty=2)
legend("topright",lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
title(paste("convergence fun",funIndex))
}
for(funIndex in 1:24){
plot(nEval,log(method_milestone[[1]][[funIndex]],10),type="l",lty=2,xlab = "nEval",ylab="f(x)",ylim=c(-3,max(log(method_milestone[[1]][[funIndex]],10))))
lines(nEval,log(method_milestone[[2]][[funIndex]],10),col='red',lty=2)
lines(nEval,log(method_milestone[[3]][[funIndex]],10),col='blue',lty=2)
legend("topright",lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
title(paste("convergence fun",funIndex))
}
for(funIndex in 1:24){
plot(nEval,log(method_milestone[[1]][[funIndex]],10),
type="l",lty=2,
xlab = "nEval",ylab="f(x)",
ylim=c(min(log(method_milestone[[1]][[funIndex]],10)),max(log(method_milestone[[1]][[funIndex]],10))))
lines(nEval,log(method_milestone[[2]][[funIndex]],10),col='red',lty=2)
lines(nEval,log(method_milestone[[3]][[funIndex]],10),col='blue',lty=2)
legend("topright",lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
title(paste("convergence fun",funIndex))
}
for(funIndex in 1:24){
plot(nEval,log(method_milestone[[1]][[funIndex]],10),
type="l",lty=2,
xlab = "nEval",ylab="f(x)",
ylim=c(min(log(method_milestone[[1]][[funIndex]],10)),max(log(method_milestone[[2]][[funIndex]],10))))
lines(nEval,log(method_milestone[[2]][[funIndex]],10),col='red',lty=2)
lines(nEval,log(method_milestone[[3]][[funIndex]],10),col='blue',lty=2)
legend("topright",lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
title(paste("convergence fun",funIndex))
}
for(funIndex in 1:24){
plot(nEval,log(method_milestone[[1]][[funIndex]],10),
type="l",lty=2,
xlab = "nEval",ylab="f(x)",
ylim=c(min(log(method_milestone[[1]][[funIndex]],10)),max(log(method_milestone[[2]][[funIndex]],10))))
lines(nEval,log(method_milestone[[2]][[funIndex]],10),col='red',lty=2)
lines(nEval,log(method_milestone[[3]][[funIndex]],10),col='blue',lty=2)
legend("topright",lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
title(paste("convergence fun",funIndex))
}
for(funIndex in 1:24){
plot(nEval,log(method_milestone[[1]][[funIndex]],10),
type="l",lty=2,
xlab = "nEval",ylab="f(x)",
ylim=c(min(log(method_milestone[[2]][[funIndex]],10)),max(log(method_milestone[[3]][[funIndex]],10))))
lines(nEval,log(method_milestone[[2]][[funIndex]],10),col='red',lty=2)
lines(nEval,log(method_milestone[[3]][[funIndex]],10),col='blue',lty=2)
legend("topright",lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
title(paste("convergence fun",funIndex))
}
for(funIndex in 1:24){
plot(nEval,log(method_milestone[[1]][[funIndex]],10),
type="l",lty=2,
xlab = "nEval",ylab="f(x)",
ylim=c(-1,max(log(method_milestone[[3]][[funIndex]],10))))
lines(nEval,log(method_milestone[[2]][[funIndex]],10),col='red',lty=2)
lines(nEval,log(method_milestone[[3]][[funIndex]],10),col='blue',lty=2)
legend("topright",lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
title(paste("convergence fun",funIndex))
}
for(funIndex in 1:24){
plot(nEval,log(method_milestone[[1]][[funIndex]],10),
type="l",lty=2,
xlab = "nEval",ylab="f(x)",
ylim=c(-1,max(log(method_milestone[[3]][[funIndex]],10))))
lines(nEval,log(method_milestone[[2]][[funIndex]],10),col='red',lty=2)
lines(nEval,log(method_milestone[[3]][[funIndex]],10),col='blue',lty=2)
legend("bottomright",lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
title(paste("convergence fun",funIndex))
}
for(funIndex in 1:24){
plot(nEval,log(method_milestone[[1]][[funIndex]],10),
type="l",lty=2,
xlab = "nEval",ylab="f(x)",
ylim=c(-1,max(log(method_milestone[[3]][[funIndex]],10))))
lines(nEval,log(method_milestone[[2]][[funIndex]],10),col='red',lty=2)
lines(nEval,log(method_milestone[[3]][[funIndex]],10),col='blue',lty=2)
legend("middleright",lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
title(paste("convergence fun",funIndex))
}
plot(nEval,log(method_milestone[[1]][[funIndex]],10),
type="l",lty=2,
xlab = "nEval",ylab="f(x)",
ylim=c(-1,max(log(method_milestone[[3]][[funIndex]],10))))
lines(nEval,log(method_milestone[[2]][[funIndex]],10),col='red',lty=2)
lines(nEval,log(method_milestone[[3]][[funIndex]],10),col='blue',lty=2)
par(xpd=TRUE)
legend("middleright",lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
legend("topright",lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
par(xpd=TRUE)
legend("topright",lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
plot(nEval,log(method_milestone[[1]][[funIndex]],10),
type="l",lty=2,bty="l"
xlab = "nEval",ylab="f(x)",
ylim=c(-1,max(log(method_milestone[[3]][[funIndex]],10))))
plot(nEval,log(method_milestone[[1]][[funIndex]],10),
type="l",lty=2,bty="l",
xlab = "nEval",ylab="f(x)",
ylim=c(-1,max(log(method_milestone[[3]][[funIndex]],10))))
plot(nEval,log(method_milestone[[1]][[funIndex]],10),
type="l",lty=2,bty="L",
xlab = "nEval",ylab="f(x)",
ylim=c(-1,max(log(method_milestone[[3]][[funIndex]],10))))
plot(nEval,log(method_milestone[[1]][[funIndex]],10),
type="l",lty=2,bty="L",
xlab = "nEval",ylab="f(x)",
ylim=c(-1,max(log(method_milestone[[3]][[funIndex]],10))))
plot(nEval,log(method_milestone[[1]][[funIndex]],10),
type="l",lty=2,bty="L",
xlab = "nEval",ylab="f(x)",
ylim=c(-1,max(log(method_milestone[[3]][[funIndex]],10))))
lines(nEval,log(method_milestone[[2]][[funIndex]],10),col='red',lty=2)
lines(nEval,log(method_milestone[[3]][[funIndex]],10),col='blue',lty=2)
plot(nEval,log(method_milestone[[1]][[funIndex]],10),
type="l",lty=2,bty="R",
xlab = "nEval",ylab="f(x)",
ylim=c(-1,max(log(method_milestone[[3]][[funIndex]],10))))
?bty
??bty
plot(nEval,log(method_milestone[[1]][[funIndex]],10),
type="l",lty=2,bty="L",
xlab = "nEval",ylab="f(x)",
ylim=c(-1,max(log(method_milestone[[3]][[funIndex]],10))))
plot(nEval,log(method_milestone[[1]][[funIndex]],10),
type="l",lty=2,bty="L",
xlab = "nEval",ylab="f(x)",xpd=T,
ylim=c(-1,max(log(method_milestone[[3]][[funIndex]],10))))
legend("topright",xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
plot(nEval,log(method_milestone[[1]][[funIndex]],10),
type="l",lty=2,bty="L",
xlab = "nEval",ylab="f(x)",
ylim=c(-1,max(log(method_milestone[[3]][[funIndex]],10))))
lines(nEval,log(method_milestone[[2]][[funIndex]],10),col='red',lty=2)
lines(nEval,log(method_milestone[[3]][[funIndex]],10),col='blue',lty=2)
par(xpd=TRUE)
legend("topright",xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
title(paste("convergence fun",funIndex))
legend(2.8,-1,xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
legend(1,-1,xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
legend(100,-1,xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
plot(nEval,log(method_milestone[[1]][[funIndex]],10),
type="l",lty=2,bty="L",
xlab = "nEval",ylab="f(x)",
ylim=c(-1,max(log(method_milestone[[3]][[funIndex]],10))))
lines(nEval,log(method_milestone[[2]][[funIndex]],10),col='red',lty=2)
lines(nEval,log(method_milestone[[3]][[funIndex]],10),col='blue',lty=2)
par(xpd=TRUE)
legend(100,-1,xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
legend(1000,-1,xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
legend(1000,1,xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
legend(3000000,max(log(method_milestone[[3]][[funIndex]],10),xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
title(paste("convergence fun",funIndex))
}
legend(3000000,max(log(method_milestone[[3]][[funIndex]],10)),xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
plot(nEval,log(method_milestone[[1]][[funIndex]],10),
type="l",lty=2,bty="L",
xlab = "nEval",ylab="f(x)",
ylim=c(-1,max(log(method_milestone[[3]][[funIndex]],10))))
lines(nEval,log(method_milestone[[2]][[funIndex]],10),col='red',lty=2)
lines(nEval,log(method_milestone[[3]][[funIndex]],10),col='blue',lty=2)
legend(3000000,max(log(method_milestone[[3]][[funIndex]],10)),xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
legend(3000000,-1.5),xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
legend(3000000,-1.5,xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
legend(0,-1.5,xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
legend(0,-2,xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
plot(nEval,log(method_milestone[[1]][[funIndex]],10),
type="l",lty=2,bty="L",
xlab = "nEval",ylab="f(x)",
ylim=c(-1,max(log(method_milestone[[3]][[funIndex]],10))))
lines(nEval,log(method_milestone[[2]][[funIndex]],10),col='red',lty=2)
lines(nEval,log(method_milestone[[3]][[funIndex]],10),col='blue',lty=2)
legend(0,-2,xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
title(paste("convergence fun",funIndex))
legend("topright",inset = (-0.2,0),xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
legend("topright",inset = c(-0.2,0),xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
plot(nEval,log(method_milestone[[1]][[funIndex]],10),
type="l",lty=2,bty="o",
xlab = "nEval",ylab="f(x)",
ylim=c(-1,max(log(method_milestone[[3]][[funIndex]],10))))
lines(nEval,log(method_milestone[[2]][[funIndex]],10),col='red',lty=2)
lines(nEval,log(method_milestone[[3]][[funIndex]],10),col='blue',lty=2)
legend("topright",inset = c(-0.2,0),xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
plot(nEval,log(method_milestone[[1]][[funIndex]],10),
type="l",lty=2,bty="L",
xlab = "nEval",ylab="f(x)",
ylim=c(-1,max(log(method_milestone[[3]][[funIndex]],10))))
lines(nEval,log(method_milestone[[2]][[funIndex]],10),col='red',lty=2)
lines(nEval,log(method_milestone[[3]][[funIndex]],10),col='blue',lty=2)
legend("topright",inset = c(-0.2,0),xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
title(paste("convergence fun",funIndex))
legend("topright",inset = c(-100000,0),xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
legend("topright",inset = c(-1000000,0),xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
??inset
??bty
??legend
?legend
legend("topright",inset = c(10000,0),xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
legend("topright",inset = c(100000,0),xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
legend("topright",inset = c(100000,10000),xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
plot(nEval,log(method_milestone[[1]][[funIndex]],10),
type="l",lty=2,bty="L",
xlab = "nEval",ylab="f(x)",
ylim=c(-1,max(log(method_milestone[[3]][[funIndex]],10))))
lines(nEval,log(method_milestone[[2]][[funIndex]],10),col='red',lty=2)
lines(nEval,log(method_milestone[[3]][[funIndex]],10),col='blue',lty=2)
legend("topright",inset = c(100000,10000),xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
title(paste("convergence fun",funIndex))
legend("topright",inset = c(100000,10),xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
legend("topright",inset = c(100000,1),xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
legend("topright",inset = c(100000,-1),xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
legend("topright",inset = c(1,-1),xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
legend("topright",inset = c(1,0),xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
legend("topright",inset = c(2,0),xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
legend("topright",inset = c(1,0),xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
legend("topright",inset = c(0-11,0),xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
plot(nEval,log(method_milestone[[1]][[funIndex]],10),
type="l",lty=2,bty="L",
xlab = "nEval",ylab="f(x)",
ylim=c(-1,max(log(method_milestone[[3]][[funIndex]],10))))
lines(nEval,log(method_milestone[[2]][[funIndex]],10),col='red',lty=2)
lines(nEval,log(method_milestone[[3]][[funIndex]],10),col='blue',lty=2)
legend("topright",inset = c(0-11,0),xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
title(paste("convergence fun",funIndex))
legend("topright",inset = c(0-11,0),xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
legend("topright",inset = c(0.11,0),xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
legend("topright",inset = c(0.1,0),xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
legend("topright",inset = c(0.5,0),xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
legend("topright",inset = c(0.5,1),xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
legend("topright",inset = c(0.7,1.2),xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
legend("topright",inset = c(0.7,1.1),xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
legend("topright",inset = c(0.1,1.1),xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
legend("topright",inset = c(-0.1,1.1),xpd=T,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
legend("topright",inset = c(-0.1,1.1),xpd=T,bty=NA,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
plot(nEval,log(method_milestone[[1]][[funIndex]],10),
type="l",lty=2,bty="L",
xlab = "nEval",ylab="f(x)",
ylim=c(-1,max(log(method_milestone[[3]][[funIndex]],10))))
lines(nEval,log(method_milestone[[2]][[funIndex]],10),col='red',lty=2)
lines(nEval,log(method_milestone[[3]][[funIndex]],10),col='blue',lty=2)
legend("topright",inset = c(-0.1,1.1),xpd=T,bty=NA,lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
title(paste("convergence fun",funIndex))
legend("topright",inset = c(-0.1,1.1),xpd=T,bty="n",lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
legend("topright",inset = c(-0.1,0),xpd=T,bty="n",lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
legend("topright",inset = c(-0,0),xpd=T,bty="n",lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
for(funIndex in 1:24){
plot(nEval,log(method_milestone[[1]][[funIndex]],10),
type="l",lty=2,bty="L",
xlab = "nEval",ylab="f(x)",
ylim=c(-1,max(log(method_milestone[[3]][[funIndex]],10))))
lines(nEval,log(method_milestone[[2]][[funIndex]],10),col='red',lty=2)
lines(nEval,log(method_milestone[[3]][[funIndex]],10),col='blue',lty=2)
legend("topright",inset = c(-0,0),xpd=T,bty="n",lty=2,col=c("black","red","blue"),c("ML-CMA-ES","RDG3","SACC"))
title(paste("convergence fun",funIndex))
}
interactionMatrix <- zeros(nGroup,nGroup)
1:10[-2]
(1:10)[-2]
diag(5)
print("check interact")
cov
?cov
covarianceM <- NULL
covarianceM[1:5] <- 1
covarianceM[1:5] <-5
covarianceM[6:10] <-10
covarianceM
rowsum(diag(5))
rowsum(diag(5))
rowSums(diag(5))
a <- diag(5)
a[15] <- 1
a
a[16] <- 1
a
rowsums(a)
rowsum(a)
rowSums(a)
setwd("~/Desktop/MOLSGO/ccoevolution/R")
rm(list=ls())
library(MaOEA)
library(ccoevolution)
